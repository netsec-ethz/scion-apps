version: 2
jobs:
  build:
    docker:
      - image: cimg/go:1.20
    steps:
      - run:
          name: Go version
          command: |
            go version
      - run:
          name: Install libpam0g-dev
          command:
            sudo apt-get update && sudo apt-get install -y libpam0g-dev
      - checkout
      - restore_cache:
          keys:
            - v3-pkg-cache-{{ checksum "go.sum" }}
            - v3-pkg-cache
      - run:
          name: Build
          command: make build
      - run:
          name: Run Linters
          command: |
            make setup_lint
            make lint
      - run:
          name: Run unit tests
          command: make test
      - save_cache:
          key: v3-pkg-cache-{{ checksum "go.sum" }}
          paths:
            - "~/go/pkg"
            - "~/.cache/go-build"

  integration:
    machine:
      image: ubuntu-2004:202111-02 # using go1.17.3
    steps:
      - checkout
      # The following step are shared with netsec-ethz/rains
      - run:
          name: Checkout SCION
          command: |
            # Get scion version from go modules. The sed command extracts the
            # replacement if one is specified in the go.mod file.
            scion_mod_version=$(go list -m github.com/scionproto/scion | sed -s 's/.*\s*=>\s*//')
            scion_repo=https://${scion_mod_version% *}.git
            # Extract the commit hash, which is the last part of the go modules version
            scion_commit=${scion_mod_version##*[ -]}
            git clone ${scion_repo} ~/scion
            cd ~/scion
            git checkout --quiet ${scion_commit}
      - restore_cache:
          keys:
            - v2-integration-pkg-cache-{{ checksum "~/scion/go.sum" }}-{{ checksum "go.sum" }}
            - v2-integration-pkg-cache-{{ checksum "~/scion/go.sum" }}-
            - v2-integration-pkg-cache-
      - run:
          name: Build SCION services and install python3 dependencies
          command: |
            # Log tool versions provided by CircleCi
            go version
            python3 --version

            cd ~/scion
            for service in "posix-router" "cs" "dispatcher" "scion-pki" "daemon" "co"; do
              go build -o ./bin/ ./go/${service}/ && echo "Built ${service}";
            done

            pip3 install -U wheel setuptools
            pip3 install -r ~/scion/env/pip3/requirements.txt
      - run:
          name: Configure and start local SCION AS
          command: |
            cd ~/scion
            export PYTHONPATH=python/:.

            # Generate tiny4.topo
            printf '#!/bin/bash\necho "0.0.0.0"' > tools/docker-ip # Some hackery to make topo scripts run
            # Use IPv4 addresses for this test
            python3 python/topology/generator.py -c ./topology/tiny4.topo
            # Link the gen directory containing sciond_addresses.json and as_list.json
            ln -s ~/scion/gen /home/circleci/project/gen
            mkdir gen-cache

            # Start all AS tiny4.topo
            supervisor/supervisor.sh reload
            supervisor/supervisor.sh start all
      - run:
          name: Install libpam0g-dev
          command:
            sudo apt-get update && sudo apt-get install -y libpam0g-dev
      # Use different Go version to build scion-apps
      - run:
          name: Install Go 1.20.7 to build scion-apps
          command: |
            wget https://go.dev/dl/go1.20.7.linux-amd64.tar.gz
            sudo rm -rf /usr/local/go
            sudo tar -C /usr/local -xzf go1.20.7.linux-amd64.tar.gz
      - run:
          name: Integration tests
          command: |
            make integration
      - store_artifacts:
          path: /tmp/scion-apps-integration/
      - save_cache:
          key: v2-integration-pkg-cache-{{ checksum "~/scion/go.sum" }}-{{ checksum "go.sum" }}
          paths:
            - "~/.go_workspace/"
            - "~/.cache/go-build/"

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - integration
